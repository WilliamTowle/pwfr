#!/usr/bin/python
## pwfr - python weather forecast reporter
## vim: ft=python ts=4 sw=4 et:

#*   Open Source software - copyright and GPLv2 apply. Briefly:       *
#*    - No warranty/guarantee of fitness, use is at own risk          *
#*    - No restrictions on strictly-private use/copying/modification  *
#*    - No re-licensing this work under more restrictive terms        *
#*    - Redistributing? Include/offer to deliver original source      *
#*   Philosophy/full details at http://www.gnu.org/copyleft/gpl.html  *

import getopt, sys
import bbcreader
import curses
from threading import Timer


def tui_loop(stdscr, fr):
    tui_loop.timer= None

    def tui_quit():
        tui_loop.timer.cancel()
        sys.exit(1)

    def tui_update(scr):
        dwin_title.erase()
        dwin_title.addstr(0,25, "Python Weather Forecast Reader")
        dwin_title.noutrefresh()

        dwin_now.clear()
        #dwin_now.addstr("...")
        dwin_now.addstr(1,0, fr.getReport())
        #dwin_now.box()
        dwin_now.noutrefresh()

        dwin_status.erase()
        dwin_status.addstr(0,32, "Press Q to quit")
        dwin_status.noutrefresh()

        curses.doupdate()
        #scr.refresh()

        if tui_loop.timer is not None:
            tui_loop.timer.cancel()
        tui_loop.timer= Timer(5, tui_update, [scr])
        tui_loop.timer.start()


    ## tui_loop main body
    global dwin_title, dwin_now, dwin_status
    global scr_h,scr_w
    scr_h, scr_w= stdscr.getmaxyx()
    dwin_title= stdscr.derwin(1,scr_w,0,0)
    dwin_now= stdscr.derwin(scr_h-2,scr_w,1,0)
    dwin_status= stdscr.derwin(1,scr_w,scr_h-1,0)
    tui_update(stdscr)
    stdscr.keypad(1)
    while 1:
        try:
            ch= stdscr.getch()
        except:
            tui_quit()

        if ch == ord('q'):
            tui_quit()
        else:
            tui_update(stdscr)


    if tui_loop.timer is not None:
        tui_loop.timer.cancel()


def usage():
    print("This is 'pwfr', the python weather forecast reporter")
    print
    print("Usage:")
    print("\t%s OPTIONS LOCATION" %(sys.argv[0]))
    print
    print("Options:")
    print("\t-h, --help: show this help")
    print("\t--noui: show report without engaging UI")

if __name__ == "__main__":
    show_ui= True

    try:
        opts, args = getopt.getopt(sys.argv[1:], "h", ["help", "noui"])
    except getopt.GetoptError:
        usage()
        sys.exit(1)

    for opt, arg in opts:
        if opt in ('-h', '--help'):
            usage()
            sys.exit()
        elif opt in ('--noui'):
            show_ui= False

    if len(args) == 0:
        usage()
    elif len(args) > 1:
        print("Invalid location, or too many arguments")
        usage()
        sys.exit(1)
    else:
        fr= bbcreader.BBCReader(args[0])
        fr.readRSS()
        if show_ui:
            curses.wrapper(tui_loop, fr)
        else:
            print(fr.getReport())
