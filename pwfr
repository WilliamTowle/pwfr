#!/usr/bin/python
## pwfr - python weather forecast reporter
## vim: ft=python ts=4 sw=4 et:

#*   Open Source software - copyright and GPLv2 apply. Briefly:       *
#*    - No warranty/guarantee of fitness, use is at own risk          *
#*    - No restrictions on strictly-private use/copying/modification  *
#*    - No re-licensing this work under more restrictive terms        *
#*    - Redistributing? Include/offer to deliver original source      *
#*   Philosophy/full details at http://www.gnu.org/copyleft/gpl.html  *

import getopt, sys
import bbcreader
import curses


def tui_loop(stdscr):

    def tui_quit():
        sys.exit(1)

    def tui_update(scr):
        #scr.clear()
        scr.addstr("...")

    ## tui_loop main body
    stdscr.addstr("Press Q to quit")
    tui_update(stdscr)
    stdscr.keypad(1)
    while 1:
        try:
            ch= stdscr.getch()
        except:
            tui_quit()

        if ch == ord('q'):
            tui_quit()
        else:
            tui_update(stdscr)


def usage(message=None):
    if message:
        print(message)
    else:
        print("This is 'pwfr', the python weather forecast reporter")
    print
    print("Usage:")
    print("\t%s [OPTIONS] LOCATION" %(sys.argv[0]))
    print
    print("Options:")
    print("\t-h, --help: show this help")
    print("\t--noui: show report without engaging UI")

if __name__ == "__main__":
    show_ui= True

    try:
        opts, args = getopt.getopt(sys.argv[1:], "h", ["help", "noui"])
    except getopt.GetoptError as oe:
        usage("Error in options: %s" %(oe.msg))
        sys.exit(1)

    for opt, arg in opts:
        if opt in ('-h', '--help'):
            usage()
            sys.exit()
        elif opt in ('--noui'):
            show_ui= False

    if len(args) == 0:
        usage("ERROR: Expected a location argument")
        sys.exit(1)
    elif len(args) > 1:
        usage("ERROR: Only one location expected")
        sys.exit(1)
    else:
        fr= bbcreader.BBCReader(args[0])
        fr.readRSS()
        if show_ui:
            curses.wrapper(tui_loop)
        else:
            print(fr.getSummary())
